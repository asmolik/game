
#include "Wheel.h"

Wheel::Wheel() : radius(0.5f), height(0.3f), RigidBody(ObjectIDs::wheelID) {}

void Wheel::init(GLuint program)
{
	glGenBuffers(1, &Wheel::vertexBuffer);

	glBindBuffer(GL_ARRAY_BUFFER, Wheel::vertexBuffer);
	glBufferData(GL_ARRAY_BUFFER, sizeof(Wheel::vertexPositions), Wheel::vertexPositions, GL_STATIC_DRAW);
	glBindBuffer(GL_ARRAY_BUFFER, 0);

	glGenBuffers(1, &Wheel::indexBuffer);

	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, Wheel::indexBuffer);
	glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(Wheel::indexData), Wheel::indexData, GL_STATIC_DRAW);
	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);


	glGenVertexArrays(1, &vao);
	glBindVertexArray(vao);

	size_t normalsDataOffset = sizeof(float)* 3 * 24;

	glBindBuffer(GL_ARRAY_BUFFER, vertexBuffer);
	glEnableVertexAttribArray(0);
	glEnableVertexAttribArray(1);
	glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, 0);
	glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 0, (void*)normalsDataOffset);
	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, indexBuffer);

	glBindVertexArray(0);


	glUseProgram(program);
	Wheel::colorUnif = glGetUniformLocation(program, "theColor");
	Wheel::matrixUnif = glGetUniformLocation(program, "matrix");
	glUseProgram(0);
}

Contact Wheel::generateContact(RigidBody* body)
{
	Contact out;
	float toi;
	float distance;

	switch (body->getID())
	{
		//plane
	case 0:
	{
			  break;
	}

		//box
	case 1:
	{
			  Box* box = (Box*)body;
			  glm::vec3 pos = current.position;
			  glm::vec3 boxPos = box->getPosition();

			  //get wheel position relative to box position
			  //translate
			  pos -= boxPos;
			  //rotate
			  pos = pos * box->getOrientation();

			  //check whether it's the car's wheel
			  glm::vec3 boxSize = box->getSize();
			  boxSize /= 2;
			  if (pos.x < boxSize.x && pos.y < boxSize.y && pos.z < boxSize.z &&
				  pos.x > -boxSize.x && pos.y > -boxSize.y && pos.z > -boxSize.z)
			  {
				  if (glm::length(current.velocity) < Physics::epsilon)
					  out.set(this, body, body->getFrontVector(), glm::vec3(0.0f), pos, 0, 0);
				  else
					  out.set(this, body, glm::normalize(-current.velocity), glm::vec3(0.0f), pos, 0, 0);
			  }
			  else
			  {
				  glm::vec3 impactPoint;
			  }
			  break;
	}

		//wheel
	case 2:
	{
			  break;
	}

		//track
	case 4:
	{
			  Track* plane = (Track*)body;
			  if (glm::length(current.velocity) < Physics::epsilon)
				  break;
			  float d = glm::dot(current.velocity, plane->getNormal());
			  glm::vec3 elo = plane->getNormal() * d;
			  float dot = glm::dot(glm::normalize(elo), plane->getNormal());
			  
			  //wheel moves parallel to plane
			  if (dot < Physics::epsilon && dot > -Physics::epsilon /*&& current.position.y > 0.5f*/)
				  break;

			  //find the closest point on the wheel to the plane
			  glm::vec3 point1 = -glm::clamp(plane->getNormal(), 0.0f, radius);
			  //wheel's rolling
			  if (std::fabs(glm::dot(plane->getNormal(), getRightVector())) < Physics::epsilon)
			  {
				  point1 = -glm::clamp(plane->getNormal(), 0.0f, radius);
			  }
			  //wheel's standing on the plane
			  else if (std::fabs(glm::dot(plane->getNormal(), getFrontVector())) < Physics::epsilon)
			  {
				  point1 = -glm::clamp(plane->getNormal(), 0.0f, height / 2.0f);
			  }
			  //the other case
			  else
			  {
				  
			  }

			  distance = glm::dot(plane->getNormal(), plane->getPosition() - current.position) / dot;
			  distance -= glm::length(point1);

			  toi = distance / glm::length(current.velocity);

			  if (distance < -0.1f)
				  break;

			  out.set(this, body, -plane->getNormal(), point1, glm::vec3(0.0f), distance, toi);

			  break;
	}
	default:
		break;
	}
	return out;
}

void Wheel::display(glutil::MatrixStack &matrix)
{
	glutil::PushStack push(matrix);

	matrix.Translate(current.position);
	matrix *= glm::mat4_cast(current.orientation);

	glUniformMatrix4fv(Wheel::matrixUnif, 1, GL_FALSE, glm::value_ptr(matrix.Top()));
	glUniform4f(Wheel::colorUnif, 0.1f, 0.1f, 0.1f, 1.0f);
	glBindVertexArray(vao);
	glDrawElements(GL_TRIANGLE_STRIP, sizeof(Wheel::indexData) / sizeof(short), GL_UNSIGNED_SHORT, 0);
	glBindVertexArray(0);
}

GLuint Wheel::vertexBuffer = 0;
GLuint Wheel::indexBuffer = 0;
GLuint Wheel::vao = 0;
GLuint Wheel::matrixUnif = 0;
GLuint Wheel::colorUnif = 0;

const float Wheel::vertexPositions[] = {
	//vertices
	//tyre
	0.0f, 0.5f, 0.15f,
	0.0087262f, 0.499924f, -0.15f,
	0.0174497f, 0.499695f, 0.15f,
	0.026168f, 0.499315f, -0.15f,
	0.0348782f, 0.498782f, 0.15f,
	0.0435779f, 0.498097f, -0.15f,
	0.0522642f, 0.497261f, 0.15f,
	0.0609347f, 0.496273f, -0.15f,
	0.0695866f, 0.495134f, 0.15f,
	0.0782172f, 0.493844f, -0.15f,
	0.0868241f, 0.492404f, 0.15f,
	0.0954045f, 0.490814f, -0.15f,
	0.103956f, 0.489074f, 0.15f,
	0.112476f, 0.487185f, -0.15f,
	0.120961f, 0.485148f, 0.15f,
	0.12941f, 0.482963f, -0.15f,
	0.137819f, 0.480631f, 0.15f,
	0.146186f, 0.478152f, -0.15f,
	0.154509f, 0.475528f, 0.15f,
	0.162784f, 0.472759f, -0.15f,
	0.17101f, 0.469846f, 0.15f,
	0.179184f, 0.46679f, -0.15f,
	0.187303f, 0.463592f, 0.15f,
	0.195366f, 0.460252f, -0.15f,
	0.203368f, 0.456773f, 0.15f,
	0.211309f, 0.453154f, -0.15f,
	0.219186f, 0.449397f, 0.15f,
	0.226995f, 0.445503f, -0.15f,
	0.234736f, 0.441474f, 0.15f,
	0.242405f, 0.43731f, -0.15f,
	0.25f, 0.433013f, 0.15f,
	0.257519f, 0.428584f, -0.15f,
	0.26496f, 0.424024f, 0.15f,
	0.27232f, 0.419335f, -0.15f,
	0.279596f, 0.414519f, 0.15f,
	0.286788f, 0.409576f, -0.15f,
	0.293893f, 0.404509f, 0.15f,
	0.300908f, 0.399318f, -0.15f,
	0.307831f, 0.394005f, 0.15f,
	0.31466f, 0.388573f, -0.15f,
	0.321394f, 0.383022f, 0.15f,
	0.32803f, 0.377355f, -0.15f,
	0.334565f, 0.371572f, 0.15f,
	0.340999f, 0.365677f, -0.15f,
	0.347329f, 0.35967f, 0.15f,
	0.353553f, 0.353553f, -0.15f,
	0.35967f, 0.347329f, 0.15f,
	0.365677f, 0.340999f, -0.15f,
	0.371572f, 0.334565f, 0.15f,
	0.377355f, 0.328029f, -0.15f,
	0.383022f, 0.321394f, 0.15f,
	0.388573f, 0.31466f, -0.15f,
	0.394005f, 0.307831f, 0.15f,
	0.399318f, 0.300908f, -0.15f,
	0.404509f, 0.293893f, 0.15f,
	0.409576f, 0.286788f, -0.15f,
	0.414519f, 0.279596f, 0.15f,
	0.419335f, 0.272319f, -0.15f,
	0.424024f, 0.26496f, 0.15f,
	0.428584f, 0.257519f, -0.15f,
	0.433013f, 0.25f, 0.15f,
	0.43731f, 0.242405f, -0.15f,
	0.441474f, 0.234736f, 0.15f,
	0.445503f, 0.226995f, -0.15f,
	0.449397f, 0.219186f, 0.15f,
	0.453154f, 0.211309f, -0.15f,
	0.456773f, 0.203368f, 0.15f,
	0.460252f, 0.195366f, -0.15f,
	0.463592f, 0.187303f, 0.15f,
	0.46679f, 0.179184f, -0.15f,
	0.469846f, 0.17101f, 0.15f,
	0.472759f, 0.162784f, -0.15f,
	0.475528f, 0.154508f, 0.15f,
	0.478152f, 0.146186f, -0.15f,
	0.480631f, 0.137819f, 0.15f,
	0.482963f, 0.129409f, -0.15f,
	0.485148f, 0.120961f, 0.15f,
	0.487185f, 0.112476f, -0.15f,
	0.489074f, 0.103956f, 0.15f,
	0.490814f, 0.0954045f, -0.15f,
	0.492404f, 0.0868241f, 0.15f,
	0.493844f, 0.0782172f, -0.15f,
	0.495134f, 0.0695866f, 0.15f,
	0.496273f, 0.0609347f, -0.15f,
	0.497261f, 0.0522642f, 0.15f,
	0.498097f, 0.0435779f, -0.15f,
	0.498782f, 0.0348783f, 0.15f,
	0.499315f, 0.0261679f, -0.15f,
	0.499695f, 0.0174497f, 0.15f,
	0.499924f, 0.00872619f, -0.15f,
	0.5f, -0.0f, 0.15f,
	0.499924f, -0.00872624f, -0.15f,
	0.499695f, -0.0174497f, 0.15f,
	0.499315f, -0.026168f, -0.15f,
	0.498782f, -0.0348783f, 0.15f,
	0.498097f, -0.0435779f, -0.15f,
	0.497261f, -0.0522643f, 0.15f,
	0.496273f, -0.0609347f, -0.15f,
	0.495134f, -0.0695866f, 0.15f,
	0.493844f, -0.0782172f, -0.15f,
	0.492404f, -0.0868241f, 0.15f,
	0.490814f, -0.0954045f, -0.15f,
	0.489074f, -0.103956f, 0.15f,
	0.487185f, -0.112476f, -0.15f,
	0.485148f, -0.120961f, 0.15f,
	0.482963f, -0.12941f, -0.15f,
	0.480631f, -0.137819f, 0.15f,
	0.478152f, -0.146186f, -0.15f,
	0.475528f, -0.154509f, 0.15f,
	0.472759f, -0.162784f, -0.15f,
	0.469846f, -0.17101f, 0.15f,
	0.46679f, -0.179184f, -0.15f,
	0.463592f, -0.187303f, 0.15f,
	0.460252f, -0.195366f, -0.15f,
	0.456773f, -0.203368f, 0.15f,
	0.453154f, -0.211309f, -0.15f,
	0.449397f, -0.219186f, 0.15f,
	0.445503f, -0.226995f, -0.15f,
	0.441474f, -0.234736f, 0.15f,
	0.43731f, -0.242405f, -0.15f,
	0.433013f, -0.25f, 0.15f,
	0.428584f, -0.257519f, -0.15f,
	0.424024f, -0.26496f, 0.15f,
	0.419335f, -0.27232f, -0.15f,
	0.414519f, -0.279597f, 0.15f,
	0.409576f, -0.286788f, -0.15f,
	0.404508f, -0.293893f, 0.15f,
	0.399318f, -0.300908f, -0.15f,
	0.394005f, -0.307831f, 0.15f,
	0.388573f, -0.31466f, -0.15f,
	0.383022f, -0.321394f, 0.15f,
	0.377355f, -0.328029f, -0.15f,
	0.371572f, -0.334565f, 0.15f,
	0.365677f, -0.340999f, -0.15f,
	0.35967f, -0.347329f, 0.15f,
	0.353553f, -0.353553f, -0.15f,
	0.347329f, -0.35967f, 0.15f,
	0.340999f, -0.365677f, -0.15f,
	0.334565f, -0.371572f, 0.15f,
	0.328029f, -0.377355f, -0.15f,
	0.321394f, -0.383022f, 0.15f,
	0.31466f, -0.388573f, -0.15f,
	0.307831f, -0.394005f, 0.15f,
	0.300907f, -0.399318f, -0.15f,
	0.293893f, -0.404509f, 0.15f,
	0.286788f, -0.409576f, -0.15f,
	0.279596f, -0.414519f, 0.15f,
	0.272319f, -0.419335f, -0.15f,
	0.26496f, -0.424024f, 0.15f,
	0.257519f, -0.428584f, -0.15f,
	0.25f, -0.433013f, 0.15f,
	0.242405f, -0.43731f, -0.15f,
	0.234736f, -0.441474f, 0.15f,
	0.226995f, -0.445503f, -0.15f,
	0.219186f, -0.449397f, 0.15f,
	0.211309f, -0.453154f, -0.15f,
	0.203368f, -0.456773f, 0.15f,
	0.195365f, -0.460252f, -0.15f,
	0.187303f, -0.463592f, 0.15f,
	0.179184f, -0.46679f, -0.15f,
	0.17101f, -0.469846f, 0.15f,
	0.162784f, -0.472759f, -0.15f,
	0.154509f, -0.475528f, 0.15f,
	0.146186f, -0.478152f, -0.15f,
	0.137819f, -0.480631f, 0.15f,
	0.129409f, -0.482963f, -0.15f,
	0.120961f, -0.485148f, 0.15f,
	0.112475f, -0.487185f, -0.15f,
	0.103956f, -0.489074f, 0.15f,
	0.0954044f, -0.490814f, -0.15f,
	0.0868241f, -0.492404f, 0.15f,
	0.0782172f, -0.493844f, -0.15f,
	0.0695866f, -0.495134f, 0.15f,
	0.0609346f, -0.496273f, -0.15f,
	0.0522641f, -0.497261f, 0.15f,
	0.0435778f, -0.498097f, -0.15f,
	0.0348781f, -0.498782f, 0.15f,
	0.026168f, -0.499315f, -0.15f,
	0.0174497f, -0.499695f, 0.15f,
	0.00872623f, -0.499924f, -0.15f,
	-0.0f, -0.5f, 0.15f,
	-0.00872632f, -0.499924f, -0.15f,
	-0.0174498f, -0.499695f, 0.15f,
	-0.0261681f, -0.499315f, -0.15f,
	-0.0348782f, -0.498782f, 0.15f,
	-0.0435779f, -0.498097f, -0.15f,
	-0.0522642f, -0.497261f, 0.15f,
	-0.0609347f, -0.496273f, -0.15f,
	-0.0695867f, -0.495134f, 0.15f,
	-0.0782173f, -0.493844f, -0.15f,
	-0.0868242f, -0.492404f, 0.15f,
	-0.0954045f, -0.490814f, -0.15f,
	-0.103956f, -0.489074f, 0.15f,
	-0.112476f, -0.487185f, -0.15f,
	-0.120961f, -0.485148f, 0.15f,
	-0.12941f, -0.482963f, -0.15f,
	-0.137819f, -0.480631f, 0.15f,
	-0.146186f, -0.478152f, -0.15f,
	-0.154508f, -0.475528f, 0.15f,
	-0.162784f, -0.472759f, -0.15f,
	-0.17101f, -0.469846f, 0.15f,
	-0.179184f, -0.46679f, -0.15f,
	-0.187303f, -0.463592f, 0.15f,
	-0.195366f, -0.460252f, -0.15f,
	-0.203368f, -0.456773f, 0.15f,
	-0.211309f, -0.453154f, -0.15f,
	-0.219186f, -0.449397f, 0.15f,
	-0.226995f, -0.445503f, -0.15f,
	-0.234736f, -0.441474f, 0.15f,
	-0.242405f, -0.43731f, -0.15f,
	-0.25f, -0.433013f, 0.15f,
	-0.257519f, -0.428584f, -0.15f,
	-0.26496f, -0.424024f, 0.15f,
	-0.272319f, -0.419335f, -0.15f,
	-0.279596f, -0.414519f, 0.15f,
	-0.286788f, -0.409576f, -0.15f,
	-0.293893f, -0.404508f, 0.15f,
	-0.300908f, -0.399318f, -0.15f,
	-0.307831f, -0.394005f, 0.15f,
	-0.31466f, -0.388573f, -0.15f,
	-0.321394f, -0.383022f, 0.15f,
	-0.32803f, -0.377355f, -0.15f,
	-0.334565f, -0.371572f, 0.15f,
	-0.340999f, -0.365677f, -0.15f,
	-0.347329f, -0.35967f, 0.15f,
	-0.353553f, -0.353553f, -0.15f,
	-0.35967f, -0.347329f, 0.15f,
	-0.365677f, -0.340999f, -0.15f,
	-0.371572f, -0.334565f, 0.15f,
	-0.377355f, -0.328029f, -0.15f,
	-0.383022f, -0.321394f, 0.15f,
	-0.388573f, -0.31466f, -0.15f,
	-0.394005f, -0.307831f, 0.15f,
	-0.399318f, -0.300908f, -0.15f,
	-0.404509f, -0.293893f, 0.15f,
	-0.409576f, -0.286788f, -0.15f,
	-0.414519f, -0.279596f, 0.15f,
	-0.419335f, -0.272319f, -0.15f,
	-0.424024f, -0.264959f, 0.15f,
	-0.428584f, -0.257519f, -0.15f,
	-0.433013f, -0.25f, 0.15f,
	-0.43731f, -0.242405f, -0.15f,
	-0.441474f, -0.234736f, 0.15f,
	-0.445503f, -0.226995f, -0.15f,
	-0.449397f, -0.219185f, 0.15f,
	-0.453154f, -0.211309f, -0.15f,
	-0.456773f, -0.203368f, 0.15f,
	-0.460252f, -0.195366f, -0.15f,
	-0.463592f, -0.187303f, 0.15f,
	-0.46679f, -0.179184f, -0.15f,
	-0.469846f, -0.17101f, 0.15f,
	-0.472759f, -0.162784f, -0.15f,
	-0.475528f, -0.154508f, 0.15f,
	-0.478152f, -0.146186f, -0.15f,
	-0.480631f, -0.137819f, 0.15f,
	-0.482963f, -0.129409f, -0.15f,
	-0.485148f, -0.120961f, 0.15f,
	-0.487185f, -0.112475f, -0.15f,
	-0.489074f, -0.103956f, 0.15f,
	-0.490814f, -0.0954044f, -0.15f,
	-0.492404f, -0.0868241f, 0.15f,
	-0.493844f, -0.0782173f, -0.15f,
	-0.495134f, -0.0695866f, 0.15f,
	-0.496273f, -0.0609346f, -0.15f,
	-0.497261f, -0.0522642f, 0.15f,
	-0.498097f, -0.0435779f, -0.15f,
	-0.498782f, -0.034878f, 0.15f,
	-0.499315f, -0.0261681f, -0.15f,
	-0.499695f, -0.0174496f, 0.15f,
	-0.499924f, -0.00872615f, -0.15f,
	-0.5f, 0.0f, 0.15f,
	-0.499924f, 0.0087264f, -0.15f,
	-0.499695f, 0.0174499f, 0.15f,
	-0.499315f, 0.0261681f, -0.15f,
	-0.498782f, 0.0348783f, 0.15f,
	-0.498097f, 0.0435779f, -0.15f,
	-0.497261f, 0.0522642f, 0.15f,
	-0.496273f, 0.0609348f, -0.15f,
	-0.495134f, 0.0695866f, 0.15f,
	-0.493844f, 0.0782173f, -0.15f,
	-0.492404f, 0.0868243f, 0.15f,
	-0.490814f, 0.0954044f, -0.15f,
	-0.489074f, 0.103956f, 0.15f,
	-0.487185f, 0.112476f, -0.15f,
	-0.485148f, 0.120961f, 0.15f,
	-0.482963f, 0.12941f, -0.15f,
	-0.480631f, 0.137819f, 0.15f,
	-0.478152f, 0.146186f, -0.15f,
	-0.475528f, 0.154509f, 0.15f,
	-0.472759f, 0.162784f, -0.15f,
	-0.469846f, 0.17101f, 0.15f,
	-0.46679f, 0.179184f, -0.15f,
	-0.463592f, 0.187303f, 0.15f,
	-0.460252f, 0.195366f, -0.15f,
	-0.456773f, 0.203369f, 0.15f,
	-0.453154f, 0.211309f, -0.15f,
	-0.449397f, 0.219186f, 0.15f,
	-0.445503f, 0.226995f, -0.15f,
	-0.441474f, 0.234736f, 0.15f,
	-0.43731f, 0.242405f, -0.15f,
	-0.433013f, 0.25f, 0.15f,
	-0.428584f, 0.257519f, -0.15f,
	-0.424024f, 0.26496f, 0.15f,
	-0.419335f, 0.27232f, -0.15f,
	-0.414519f, 0.279596f, 0.15f,
	-0.409576f, 0.286788f, -0.15f,
	-0.404508f, 0.293893f, 0.15f,
	-0.399318f, 0.300908f, -0.15f,
	-0.394005f, 0.307831f, 0.15f,
	-0.388573f, 0.31466f, -0.15f,
	-0.383022f, 0.321394f, 0.15f,
	-0.377355f, 0.32803f, -0.15f,
	-0.371572f, 0.334565f, 0.15f,
	-0.365677f, 0.340999f, -0.15f,
	-0.35967f, 0.347329f, 0.15f,
	-0.353553f, 0.353553f, -0.15f,
	-0.347329f, 0.35967f, 0.15f,
	-0.340999f, 0.365677f, -0.15f,
	-0.334565f, 0.371572f, 0.15f,
	-0.328029f, 0.377355f, -0.15f,
	-0.321394f, 0.383022f, 0.15f,
	-0.31466f, 0.388573f, -0.15f,
	-0.307831f, 0.394005f, 0.15f,
	-0.300907f, 0.399318f, -0.15f,
	-0.293893f, 0.404508f, 0.15f,
	-0.286788f, 0.409576f, -0.15f,
	-0.279597f, 0.414519f, 0.15f,
	-0.272319f, 0.419335f, -0.15f,
	-0.26496f, 0.424024f, 0.15f,
	-0.257519f, 0.428584f, -0.15f,
	-0.25f, 0.433013f, 0.15f,
	-0.242405f, 0.43731f, -0.15f,
	-0.234736f, 0.441474f, 0.15f,
	-0.226995f, 0.445503f, -0.15f,
	-0.219185f, 0.449397f, 0.15f,
	-0.211309f, 0.453154f, -0.15f,
	-0.203368f, 0.456773f, 0.15f,
	-0.195365f, 0.460253f, -0.15f,
	-0.187303f, 0.463592f, 0.15f,
	-0.179184f, 0.46679f, -0.15f,
	-0.17101f, 0.469846f, 0.15f,
	-0.162784f, 0.472759f, -0.15f,
	-0.154508f, 0.475528f, 0.15f,
	-0.146186f, 0.478152f, -0.15f,
	-0.137819f, 0.480631f, 0.15f,
	-0.129409f, 0.482963f, -0.15f,
	-0.120961f, 0.485148f, 0.15f,
	-0.112476f, 0.487185f, -0.15f,
	-0.103956f, 0.489074f, 0.15f,
	-0.0954043f, 0.490814f, -0.15f,
	-0.086824f, 0.492404f, 0.15f,
	-0.0782169f, 0.493844f, -0.15f,
	-0.0695863f, 0.495134f, 0.15f,
	-0.0609347f, 0.496273f, -0.15f,
	-0.0522643f, 0.497261f, 0.15f,
	-0.043578f, 0.498097f, -0.15f,
	-0.0348782f, 0.498782f, 0.15f,
	-0.026168f, 0.499315f, -0.15f,
	-0.0174498f, 0.499695f, 0.15f,
	-0.00872607f, 0.499924f, -0.15f,

	//rim



	//normals
	//tyre
	0.0f, 1.0f, 0.0f,
	0.0174524f, 0.999848f, 0.0f,
	0.0348995f, 0.999391f, 0.0f,
	0.052336f, 0.99863f, 0.0f,
	0.0697565f, 0.997564f, 0.0f,
	0.0871557f, 0.996195f, 0.0f,
	0.104528f, 0.994522f, 0.0f,
	0.121869f, 0.992546f, 0.0f,
	0.139173f, 0.990268f, 0.0f,
	0.156434f, 0.987688f, 0.0f,
	0.173648f, 0.984808f, 0.0f,
	0.190809f, 0.981627f, 0.0f,
	0.207912f, 0.978148f, 0.0f,
	0.224951f, 0.97437f, 0.0f,
	0.241922f, 0.970296f, 0.0f,
	0.258819f, 0.965926f, 0.0f,
	0.275637f, 0.961262f, 0.0f,
	0.292372f, 0.956305f, 0.0f,
	0.309017f, 0.951057f, 0.0f,
	0.325568f, 0.945519f, 0.0f,
	0.34202f, 0.939693f, 0.0f,
	0.358368f, 0.933581f, 0.0f,
	0.374607f, 0.927184f, 0.0f,
	0.390731f, 0.920505f, 0.0f,
	0.406737f, 0.913545f, 0.0f,
	0.422618f, 0.906308f, 0.0f,
	0.438371f, 0.898794f, 0.0f,
	0.453991f, 0.891007f, 0.0f,
	0.469472f, 0.882948f, 0.0f,
	0.48481f, 0.87462f, 0.0f,
	0.5f, 0.866025f, 0.0f,
	0.515038f, 0.857167f, 0.0f,
	0.529919f, 0.848048f, 0.0f,
	0.544639f, 0.838671f, 0.0f,
	0.559193f, 0.829038f, 0.0f,
	0.573577f, 0.819152f, 0.0f,
	0.587785f, 0.809017f, 0.0f,
	0.601815f, 0.798635f, 0.0f,
	0.615662f, 0.788011f, 0.0f,
	0.62932f, 0.777146f, 0.0f,
	0.642788f, 0.766044f, 0.0f,
	0.656059f, 0.75471f, 0.0f,
	0.669131f, 0.743145f, 0.0f,
	0.681998f, 0.731354f, 0.0f,
	0.694658f, 0.71934f, 0.0f,
	0.707107f, 0.707107f, 0.0f,
	0.71934f, 0.694658f, 0.0f,
	0.731354f, 0.681998f, 0.0f,
	0.743145f, 0.669131f, 0.0f,
	0.75471f, 0.656059f, 0.0f,
	0.766044f, 0.642788f, 0.0f,
	0.777146f, 0.62932f, 0.0f,
	0.788011f, 0.615661f, 0.0f,
	0.798636f, 0.601815f, 0.0f,
	0.809017f, 0.587785f, 0.0f,
	0.819152f, 0.573576f, 0.0f,
	0.829038f, 0.559193f, 0.0f,
	0.838671f, 0.544639f, 0.0f,
	0.848048f, 0.529919f, 0.0f,
	0.857167f, 0.515038f, 0.0f,
	0.866025f, 0.5f, 0.0f,
	0.87462f, 0.48481f, 0.0f,
	0.882948f, 0.469472f, 0.0f,
	0.891007f, 0.45399f, 0.0f,
	0.898794f, 0.438371f, 0.0f,
	0.906308f, 0.422618f, 0.0f,
	0.913545f, 0.406737f, 0.0f,
	0.920505f, 0.390731f, 0.0f,
	0.927184f, 0.374607f, 0.0f,
	0.93358f, 0.358368f, 0.0f,
	0.939693f, 0.34202f, 0.0f,
	0.945519f, 0.325568f, 0.0f,
	0.951057f, 0.309017f, 0.0f,
	0.956305f, 0.292372f, 0.0f,
	0.961262f, 0.275637f, 0.0f,
	0.965926f, 0.258819f, 0.0f,
	0.970296f, 0.241922f, 0.0f,
	0.97437f, 0.224951f, 0.0f,
	0.978148f, 0.207912f, 0.0f,
	0.981627f, 0.190809f, 0.0f,
	0.984808f, 0.173648f, 0.0f,
	0.987688f, 0.156434f, 0.0f,
	0.990268f, 0.139173f, 0.0f,
	0.992546f, 0.121869f, 0.0f,
	0.994522f, 0.104528f, 0.0f,
	0.996195f, 0.0871558f, 0.0f,
	0.997564f, 0.0697565f, 0.0f,
	0.99863f, 0.0523359f, 0.0f,
	0.999391f, 0.0348994f, 0.0f,
	0.999848f, 0.0174524f, 0.0f,
	1.0f, 0.0, 0.0f,
	0.999848f, -0.0174525f, 0.0f,
	0.999391f, -0.0348995f, 0.0f,
	0.99863f, -0.0523359f, 0.0f,
	0.997564f, -0.0697566f, 0.0f,
	0.996195f, -0.0871559f, 0.0f,
	0.994522f, -0.104529f, 0.0f,
	0.992546f, -0.121869f, 0.0f,
	0.990268f, -0.139173f, 0.0f,
	0.987688f, -0.156434f, 0.0f,
	0.984808f, -0.173648f, 0.0f,
	0.981627f, -0.190809f, 0.0f,
	0.978148f, -0.207912f, 0.0f,
	0.97437f, -0.224951f, 0.0f,
	0.970296f, -0.241922f, 0.0f,
	0.965926f, -0.258819f, 0.0f,
	0.961262f, -0.275637f, 0.0f,
	0.956305f, -0.292372f, 0.0f,
	0.951057f, -0.309017f, 0.0f,
	0.945519f, -0.325568f, 0.0f,
	0.939693f, -0.34202f, 0.0f,
	0.93358f, -0.358368f, 0.0f,
	0.927184f, -0.374607f, 0.0f,
	0.920505f, -0.390731f, 0.0f,
	0.913545f, -0.406737f, 0.0f,
	0.906308f, -0.422618f, 0.0f,
	0.898794f, -0.438371f, 0.0f,
	0.891006f, -0.453991f, 0.0f,
	0.882948f, -0.469472f, 0.0f,
	0.87462f, -0.48481f, 0.0f,
	0.866025f, -0.5f, 0.0f,
	0.857167f, -0.515038f, 0.0f,
	0.848048f, -0.529919f, 0.0f,
	0.838671f, -0.544639f, 0.0f,
	0.829037f, -0.559193f, 0.0f,
	0.819152f, -0.573576f, 0.0f,
	0.809017f, -0.587785f, 0.0f,
	0.798635f, -0.601815f, 0.0f,
	0.788011f, -0.615661f, 0.0f,
	0.777146f, -0.629321f, 0.0f,
	0.766044f, -0.642788f, 0.0f,
	0.75471f, -0.656059f, 0.0f,
	0.743145f, -0.669131f, 0.0f,
	0.731354f, -0.681998f, 0.0f,
	0.71934f, -0.694658f, 0.0f,
	0.707107f, -0.707107f, 0.0f,
	0.694658f, -0.71934f, 0.0f,
	0.681998f, -0.731354f, 0.0f,
	0.669131f, -0.743145f, 0.0f,
	0.656059f, -0.75471f, 0.0f,
	0.642787f, -0.766045f, 0.0f,
	0.62932f, -0.777146f, 0.0f,
	0.615661f, -0.788011f, 0.0f,
	0.601815f, -0.798636f, 0.0f,
	0.587785f, -0.809017f, 0.0f,
	0.573576f, -0.819152f, 0.0f,
	0.559193f, -0.829038f, 0.0f,
	0.544639f, -0.838671f, 0.0f,
	0.529919f, -0.848048f, 0.0f,
	0.515038f, -0.857167f, 0.0f,
	0.5f, -0.866026f, 0.0f,
	0.48481f, -0.87462f, 0.0f,
	0.469472f, -0.882948f, 0.0f,
	0.45399f, -0.891007f, 0.0f,
	0.438371f, -0.898794f, 0.0f,
	0.422618f, -0.906308f, 0.0f,
	0.406737f, -0.913545f, 0.0f,
	0.390731f, -0.920505f, 0.0f,
	0.374606f, -0.927184f, 0.0f,
	0.358368f, -0.93358f, 0.0f,
	0.34202f, -0.939693f, 0.0f,
	0.325568f, -0.945519f, 0.0f,
	0.309017f, -0.951057f, 0.0f,
	0.292372f, -0.956305f, 0.0f,
	0.275637f, -0.961262f, 0.0f,
	0.258819f, -0.965926f, 0.0f,
	0.241922f, -0.970296f, 0.0f,
	0.224951f, -0.97437f, 0.0f,
	0.207912f, -0.978148f, 0.0f,
	0.190809f, -0.981627f, 0.0f,
	0.173648f, -0.984808f, 0.0f,
	0.156434f, -0.987688f, 0.0f,
	0.139173f, -0.990268f, 0.0f,
	0.121869f, -0.992546f, 0.0f,
	0.104528f, -0.994522f, 0.0f,
	0.0871556f, -0.996195f, 0.0f,
	0.0697562f, -0.997564f, 0.0f,
	0.052336f, -0.99863f, 0.0f,
	0.0348995f, -0.999391f, 0.0f,
	0.0174525f, -0.999848f, 0.0f,
	0.0f, -1.0f, 0.0f,
	-0.0174526f, -0.999848f, 0.0f,
	-0.0348996f, -0.999391f, 0.0f,
	-0.0523362f, -0.99863f, 0.0f,
	-0.0697564f, -0.997564f, 0.0f,
	-0.0871558f, -0.996195f, 0.0f,
	-0.104528f, -0.994522f, 0.0f,
	-0.121869f, -0.992546f, 0.0f,
	-0.139173f, -0.990268f, 0.0f,
	-0.156435f, -0.987688f, 0.0f,
	-0.173648f, -0.984808f, 0.0f,
	-0.190809f, -0.981627f, 0.0f,
	-0.207912f, -0.978148f, 0.0f,
	-0.224951f, -0.97437f, 0.0f,
	-0.241922f, -0.970296f, 0.0f,
	-0.258819f, -0.965926f, 0.0f,
	-0.275638f, -0.961262f, 0.0f,
	-0.292372f, -0.956305f, 0.0f,
	-0.309017f, -0.951057f, 0.0f,
	-0.325568f, -0.945519f, 0.0f,
	-0.34202f, -0.939693f, 0.0f,
	-0.358368f, -0.93358f, 0.0f,
	-0.374607f, -0.927184f, 0.0f,
	-0.390731f, -0.920505f, 0.0f,
	-0.406737f, -0.913545f, 0.0f,
	-0.422618f, -0.906308f, 0.0f,
	-0.438371f, -0.898794f, 0.0f,
	-0.453991f, -0.891007f, 0.0f,
	-0.469472f, -0.882948f, 0.0f,
	-0.48481f, -0.87462f, 0.0f,
	-0.5f, -0.866025f, 0.0f,
	-0.515038f, -0.857167f, 0.0f,
	-0.529919f, -0.848048f, 0.0f,
	-0.544639f, -0.838671f, 0.0f,
	-0.559193f, -0.829038f, 0.0f,
	-0.573577f, -0.819152f, 0.0f,
	-0.587785f, -0.809017f, 0.0f,
	-0.601815f, -0.798635f, 0.0f,
	-0.615661f, -0.788011f, 0.0f,
	-0.62932f, -0.777146f, 0.0f,
	-0.642788f, -0.766044f, 0.0f,
	-0.656059f, -0.75471f, 0.0f,
	-0.669131f, -0.743145f, 0.0f,
	-0.681998f, -0.731354f, 0.0f,
	-0.694659f, -0.71934f, 0.0f,
	-0.707107f, -0.707107f, 0.0f,
	-0.71934f, -0.694658f, 0.0f,
	-0.731354f, -0.681998f, 0.0f,
	-0.743145f, -0.669131f, 0.0f,
	-0.75471f, -0.656059f, 0.0f,
	-0.766045f, -0.642788f, 0.0f,
	-0.777146f, -0.62932f, 0.0f,
	-0.788011f, -0.615662f, 0.0f,
	-0.798635f, -0.601815f, 0.0f,
	-0.809017f, -0.587785f, 0.0f,
	-0.819152f, -0.573576f, 0.0f,
	-0.829038f, -0.559193f, 0.0f,
	-0.838671f, -0.544639f, 0.0f,
	-0.848048f, -0.529919f, 0.0f,
	-0.857167f, -0.515038f, 0.0f,
	-0.866025f, -0.5f, 0.0f,
	-0.87462f, -0.48481f, 0.0f,
	-0.882948f, -0.469472f, 0.0f,
	-0.891007f, -0.45399f, 0.0f,
	-0.898794f, -0.438371f, 0.0f,
	-0.906308f, -0.422618f, 0.0f,
	-0.913545f, -0.406737f, 0.0f,
	-0.920505f, -0.390731f, 0.0f,
	-0.927184f, -0.374606f, 0.0f,
	-0.933581f, -0.358368f, 0.0f,
	-0.939693f, -0.34202f, 0.0f,
	-0.945519f, -0.325568f, 0.0f,
	-0.951057f, -0.309017f, 0.0f,
	-0.956305f, -0.292372f, 0.0f,
	-0.961262f, -0.275637f, 0.0f,
	-0.965926f, -0.258819f, 0.0f,
	-0.970296f, -0.241922f, 0.0f,
	-0.97437f, -0.224951f, 0.0f,
	-0.978148f, -0.207911f, 0.0f,
	-0.981627f, -0.190809f, 0.0f,
	-0.984808f, -0.173648f, 0.0f,
	-0.987688f, -0.156435f, 0.0f,
	-0.990268f, -0.139173f, 0.0f,
	-0.992546f, -0.121869f, 0.0f,
	-0.994522f, -0.104528f, 0.0f,
	-0.996195f, -0.0871557f, 0.0f,
	-0.997564f, -0.0697561f, 0.0f,
	-0.99863f, -0.0523361f, 0.0f,
	-0.999391f, -0.0348993f, 0.0f,
	-0.999848f, -0.0174523f, 0.0f,
	-1.0f, 0.0f, 0.0f,
	-0.999848f, 0.0174528f, 0.0f,
	-0.999391f, 0.0348998f, 0.0f,
	-0.99863f, 0.0523361f, 0.0f,
	-0.997564f, 0.0697566f, 0.0f,
	-0.996195f, 0.0871557f, 0.0f,
	-0.994522f, 0.104528f, 0.0f,
	-0.992546f, 0.12187f, 0.0f,
	-0.990268f, 0.139173f, 0.0f,
	-0.987688f, 0.156435f, 0.0f,
	-0.984808f, 0.173649f, 0.0f,
	-0.981627f, 0.190809f, 0.0f,
	-0.978148f, 0.207912f, 0.0f,
	-0.97437f, 0.224951f, 0.0f,
	-0.970296f, 0.241922f, 0.0f,
	-0.965926f, 0.258819f, 0.0f,
	-0.961262f, 0.275638f, 0.0f,
	-0.956305f, 0.292372f, 0.0f,
	-0.951056f, 0.309017f, 0.0f,
	-0.945519f, 0.325568f, 0.0f,
	-0.939693f, 0.34202f, 0.0f,
	-0.93358f, 0.358368f, 0.0f,
	-0.927184f, 0.374607f, 0.0f,
	-0.920505f, 0.390731f, 0.0f,
	-0.913545f, 0.406737f, 0.0f,
	-0.906308f, 0.422618f, 0.0f,
	-0.898794f, 0.438371f, 0.0f,
	-0.891006f, 0.453991f, 0.0f,
	-0.882948f, 0.469472f, 0.0f,
	-0.87462f, 0.48481f, 0.0f,
	-0.866025f, 0.5f, 0.0f,
	-0.857167f, 0.515038f, 0.0f,
	-0.848048f, 0.529919f, 0.0f,
	-0.838671f, 0.544639f, 0.0f,
	-0.829038f, 0.559193f, 0.0f,
	-0.819152f, 0.573577f, 0.0f,
	-0.809017f, 0.587785f, 0.0f,
	-0.798635f, 0.601815f, 0.0f,
	-0.788011f, 0.615662f, 0.0f,
	-0.777146f, 0.62932f, 0.0f,
	-0.766044f, 0.642788f, 0.0f,
	-0.754709f, 0.656059f, 0.0f,
	-0.743145f, 0.669131f, 0.0f,
	-0.731354f, 0.681998f, 0.0f,
	-0.719339f, 0.694659f, 0.0f,
	-0.707107f, 0.707107f, 0.0f,
	-0.694658f, 0.71934f, 0.0f,
	-0.681998f, 0.731354f, 0.0f,
	-0.669131f, 0.743145f, 0.0f,
	-0.656059f, 0.75471f, 0.0f,
	-0.642787f, 0.766045f, 0.0f,
	-0.62932f, 0.777146f, 0.0f,
	-0.615661f, 0.788011f, 0.0f,
	-0.601815f, 0.798636f, 0.0f,
	-0.587785f, 0.809017f, 0.0f,
	-0.573576f, 0.819152f, 0.0f,
	-0.559193f, 0.829037f, 0.0f,
	-0.544639f, 0.838671f, 0.0f,
	-0.529919f, 0.848048f, 0.0f,
	-0.515038f, 0.857167f, 0.0f,
	-0.5f, 0.866026f, 0.0f,
	-0.484809f, 0.87462f, 0.0f,
	-0.469471f, 0.882948f, 0.0f,
	-0.453991f, 0.891007f, 0.0f,
	-0.438371f, 0.898794f, 0.0f,
	-0.422618f, 0.906308f, 0.0f,
	-0.406736f, 0.913546f, 0.0f,
	-0.390731f, 0.920505f, 0.0f,
	-0.374606f, 0.927184f, 0.0f,
	-0.358368f, 0.933581f, 0.0f,
	-0.34202f, 0.939693f, 0.0f,
	-0.325568f, 0.945519f, 0.0f,
	-0.309017f, 0.951057f, 0.0f,
	-0.292372f, 0.956305f, 0.0f,
	-0.275638f, 0.961262f, 0.0f,
	-0.258819f, 0.965926f, 0.0f,
	-0.241922f, 0.970296f, 0.0f,
	-0.224951f, 0.97437f, 0.0f,
	-0.207911f, 0.978148f, 0.0f,
	-0.190809f, 0.981627f, 0.0f,
	-0.173648f, 0.984808f, 0.0f,
	-0.156434f, 0.987688f, 0.0f,
	-0.139173f, 0.990268f, 0.0f,
	-0.121869f, 0.992546f, 0.0f,
	-0.104529f, 0.994522f, 0.0f,
	-0.087156f, 0.996195f, 0.0f,
	-0.0697564f, 0.997564f, 0.0f,
	-0.052336f, 0.99863f, 0.0f,
	-0.0348996f, 0.999391f, 0.0f,
	-0.0174521f, 0.999848f, 0.0f,



	//rim

};

const short Wheel::indexData[] = {
	//tyre
	0, 1, 2,
	3, 4, 5,
	6, 7, 8,
	9, 10, 11,
	12, 13, 14,
	15, 16, 17,
	18, 19, 20,
	21, 22, 23,
	24, 25, 26,
	27, 28, 29,
	30, 31, 32,
	33, 34, 35,
	36, 37, 38,
	39, 40, 41,
	42, 43, 44,
	45, 46, 47,
	48, 49, 50,
	51, 52, 53,
	54, 55, 56,
	57, 58, 59,
	60, 61, 62,
	63, 64, 65,
	66, 67, 68,
	69, 70, 71,
	72, 73, 74,
	75, 76, 77,
	78, 79, 80,
	81, 82, 83,
	84, 85, 86,
	87, 88, 89,
	90, 91, 92,
	93, 94, 95,
	96, 97, 98,
	99, 100, 101,
	102, 103, 104,
	105, 106, 107,
	108, 109, 110,
	111, 112, 113,
	114, 115, 116,
	117, 118, 119,
	120, 121, 122,
	123, 124, 125,
	126, 127, 128,
	129, 130, 131,
	132, 133, 134,
	135, 136, 137,
	138, 139, 140,
	141, 142, 143,
	144, 145, 146,
	147, 148, 149,
	150, 151, 152,
	153, 154, 155,
	156, 157, 158,
	159, 160, 161,
	162, 163, 164,
	165, 166, 167,
	168, 169, 170,
	171, 172, 173,
	174, 175, 176,
	177, 178, 179,
	180, 181, 182,
	183, 184, 185,
	186, 187, 188,
	189, 190, 191,
	192, 193, 194,
	195, 196, 197,
	198, 199, 200,
	201, 202, 203,
	204, 205, 206,
	207, 208, 209,
	210, 211, 212,
	213, 214, 215,
	216, 217, 218,
	219, 220, 221,
	222, 223, 224,
	225, 226, 227,
	228, 229, 230,
	231, 232, 233,
	234, 235, 236,
	237, 238, 239,
	240, 241, 242,
	243, 244, 245,
	246, 247, 248,
	249, 250, 251,
	252, 253, 254,
	255, 256, 257,
	258, 259, 260,
	261, 262, 263,
	264, 265, 266,
	267, 268, 269,
	270, 271, 272,
	273, 274, 275,
	276, 277, 278,
	279, 280, 281,
	282, 283, 284,
	285, 286, 287,
	288, 289, 290,
	291, 292, 293,
	294, 295, 296,
	297, 298, 299,
	300, 301, 302,
	303, 304, 305,
	306, 307, 308,
	309, 310, 311,
	312, 313, 314,
	315, 316, 317,
	318, 319, 320,
	321, 322, 323,
	324, 325, 326,
	327, 328, 329,
	330, 331, 332,
	333, 334, 335,
	336, 337, 338,
	339, 340, 341,
	342, 343, 344,
	345, 346, 347,
	348, 349, 350,
	351, 352, 353,
	354, 355, 356,
	357, 358, 359,
	0, 1,


};