#version 330

in vec4 cameraSpacePos;
in vec3 vertexNormal;
in vec2 texCo;

layout (location = 0) out vec3 cameraSpacePosOut;
layout (location = 1) out vec3 diffuseOut;
layout (location = 2) out vec3 specularOut;
layout (location = 3) out vec3 normalOut;
layout (location = 4) out vec3 texCoOut;
layout (location = 5) out float shininessOut;

uniform sampler2D diffuseColorSampler;
uniform sampler2D specularColorSampler;
uniform float shininessFactor;

void main()
{
    cameraSpacePosOut = cameraSpacePos.xyz;
    diffuseOut = texture(diffuseColorSampler, texCo).xyz;
	specularOut = texture(specularColorSampler, texCo).xyz;
    normalOut = normalize(vertexNormal);
    texCoOut = vec3(texCo, 0.0);
	shininessOut = shininessFactor;
}